package com.ecommerce.demo.views;

import java.util.Map;
import java.util.ArrayList;

import javax.swing.table.DefaultTableModel;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.JPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

import com.ecommerce.demo.model.Person;
import com.ecommerce.demo.model.Business;
import com.ecommerce.demo.model.RetailerInStockProducts;
import com.ecommerce.demo.controller.ProductController;
import com.ecommerce.demo.controller.ProductController.Product;

public class RetailerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form InventoryManagementJPanel
     */
    
    private JPanel userProcessContainer;  
    private Business business;
    private String username;
    private RetailerInStockProducts retailerInStockProducts;
    private ProductController productDirectory;
    
    public RetailerJPanel(JPanel userProcessContainer, Business business, String username) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.username = username;
        this.retailerInStockProducts = this.business.getRetailerInStockProducts();
        this.productDirectory = this.business.getProductDirectory();
        populateInStockTable();
        populateProductComboBox();
    }
    
    public void populateInStockTable() {
    DefaultTableModel model = (DefaultTableModel) tblInStockProducts.getModel();
    model.setRowCount(0);
    retailerInStockProducts.getRetailerInStockProducts().entrySet().stream()
        .sorted((entry1, entry2) -> {
            String productName1 = productDirectory.findProduct(entry1.getKey()).getProductName();
            String productName2 = productDirectory.findProduct(entry2.getKey()).getProductName();
            return productName1.compareTo(productName2);
        })
        .forEach(entry -> {
            Product product = productDirectory.findProduct(entry.getKey());
            if (product != null) {
                Object[] rowData = {
                    product.getProductId(),
                    product.getProductName(),
                    entry.getValue(),
                    product.getSellingPrice(),
                    entry.getValue() * Double.parseDouble(product.getSellingPrice())
                };
                model.addRow(rowData);
            }
        });
}
    
    private void populateProductComboBox() {
        ArrayList<String> productNamesList = business.getProductDirectory().getProductNames();
        String[] productNamesArray = productNamesList.toArray(new String[0]);
        jComboBoxProductName.setModel(new javax.swing.DefaultComboBoxModel<>(productNamesArray));
    }
    
    private void initializeSpinner() {
        SpinnerModel model = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        jSpinnerProductCount.setModel(model);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInStockProducts = new javax.swing.JTable();
        jComboBoxProductName = new javax.swing.JComboBox<>();
        jSpinnerProductCount = new javax.swing.JSpinner();
        btnAddProduct = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INVENTORY MANAGEMENT");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 351, 44));

        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogout.setText("LOGOUT");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 40, 121, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("IN STOCK PRODUCTS");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 452, 36));

        tblInStockProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Available Units", "Price Per Unit", "Total Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInStockProducts);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 610, 260));

        jComboBoxProductName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(jComboBoxProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 410, 170, 30));
        add(jSpinnerProductCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 410, 80, 30));

        btnAddProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddProduct.setText("ADD PRODUCTS");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });
        add(btnAddProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 410, 150, 30));
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        // TODO add your handling code here:
        String selectedProduct = jComboBoxProductName.getSelectedItem().toString();
        int selectedCount = (int) jSpinnerProductCount.getValue();
        this.retailerInStockProducts.addProducts(selectedProduct, selectedCount);
        populateInStockTable();
    }//GEN-LAST:event_btnAddProductActionPerformed
        
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        this.business.setRetailerInStockProducts(this.retailerInStockProducts);
        LoginJPanel panel = new LoginJPanel(userProcessContainer, this.business);
        userProcessContainer.add("LoginJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
    }//GEN-LAST:event_btnLogoutActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnLogout;
    private javax.swing.JComboBox<String> jComboBoxProductName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerProductCount;
    private javax.swing.JTable tblInStockProducts;
    // End of variables declaration//GEN-END:variables
}
